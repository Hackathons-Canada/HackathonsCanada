services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: /scripts/django/start
    ports:
      - "22300:22300"
    volumes:
      - ${PWD}/hackathons_canada/local_settings.py:/app/hackathons_canada/local_settings.py:ro
      - /srv/static:/app/static2
    depends_on:
      - postgres
      - valkey
    env_file:
      - .env
    restart: unless-stopped

  valkey:
    image: "valkey/valkey:7.2-alpine"
    restart: always

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ${PWD}/scripts/postgres-init-db.sh:/docker-entrypoint-initdb.d/postgres-init-db.sh
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: celery_worker
    command: /scripts/celery/worker/start
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - valkey
      - postgres
    healthcheck:
      test: ["CMD", "celery", "worker", "-A", "dischannelsaver", "--loglevel=info"]
      interval: 10s
      retries: 5

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    image: celery_beat
    command: /scripts/celery/beat/start
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - valkey
      - postgres
    healthcheck:
      test: ["CMD", "celery", "beat", "-A", "dischannelsaver", "--loglevel=info"]
      interval: 10s
      retries: 5

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    image: flower
    command: /scripts/flower/start
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5557:5555
    depends_on:
      - valkey
      - postgres

volumes:
  postgres_data:
  static_volume:
  media_volume:

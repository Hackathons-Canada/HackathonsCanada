# Generated by Django 5.0.3 on 2024-07-01 21:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_category_hackathon_created_at_hackathon_created_by_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False, help_text='Enable or disable notifications')),
                ('weekly', models.BooleanField(default=False, help_text='Send weekly notifications')),
                ('monthly', models.BooleanField(default=False, help_text='Send monthly notifications')),
                ('added', models.BooleanField(default=False, help_text='Send notifications when a new hackathon is added')),
                ('local_only', models.BooleanField(default=False, help_text='Only send notifications for hackathons in your local area (as defined by radius) - Changes the behavior of all other notification settings')),
                ('only_eligible', models.BooleanField(default=True, help_text='Only send notifications for hackathons you are eligible for (based on age and education level)')),
                ('radius_type', models.CharField(choices=[('km', 'Kilometers'), ('mi', 'Miles')], default='km', help_text='Unit of radius', max_length=255)),
                ('radius', models.PositiveIntegerField(default=150, help_text='Radius in which a hackathon must be in to be considered local')),
            ],
            options={
                'verbose_name_plural': 'Notification Policies',
            },
        ),
        migrations.AlterModelManagers(
            name='hacker',
            managers=[
            ],
        ),
        migrations.AddField(
            model_name='hackathon',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Is the hackathon visible to all users'),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='reimbursements',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddConstraint(
            model_name='notificationpolicy',
            constraint=models.CheckConstraint(check=models.Q(('weekly', True), ('monthly', True), _connector='XOR'), name='weekly_or_monthly_not_both'),
        ),
        migrations.AddField(
            model_name='hacker',
            name='notification_policy',
            field=models.OneToOneField(default=234, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='core.notificationpolicy'),
            preserve_default=False,
        ),
    ]
